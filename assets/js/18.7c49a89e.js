(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{561:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"虚拟化混淆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟化混淆"}},[s._v("#")]),s._v(" 虚拟化混淆")]),s._v(" "),a("p",[s._v("虚拟混淆手段整理。")]),s._v(" "),a("p",[s._v("这里整理下目前对于虚拟混淆的一些想法，")]),s._v(" "),a("p",[s._v("大多数的想法和思路来自ctf赛题和tigress挑战。")]),s._v(" "),a("h2",{attrs:{id:"vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm"}},[s._v("#")]),s._v(" vm")]),s._v(" "),a("p",[s._v("首先是vm本身开始说， 虚拟机的设计本身，牵扯到虚拟机本身对于opcode->handler的调度， 和虚拟机内部对于循环判断函数调用的调度。")]),s._v(" "),a("h3",{attrs:{id:"vm机器和应对思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm机器和应对思路"}},[s._v("#")]),s._v(" vm机器和应对思路")]),s._v(" "),a("p",[s._v("主要来说有寄存器机器和栈机器两类，")]),s._v(" "),a("p",[s._v("如果说手动编写反汇编脚本，然后一点点处理的话，两者的区别不太大，")]),s._v(" "),a("p",[s._v("如果使用miasm等符号执行/动态符号执行框架处理的话， 目前寄存器机器的反汇编脚本，直接把每个寄存器都设置为符号值， 处理起来会比较舒服， 栈机器目前我没学到啥手段。")]),s._v(" "),a("p",[s._v("但是两者都可以通过这些框架获取类似反编译脚本，也区别不算太大。")]),s._v(" "),a("p",[s._v("这是简单的虚拟机相关结构，")]),s._v(" "),a("p",[s._v("设置好的虚拟指令，opcode/bytecode的指令流， 虚拟栈， 虚拟pc指针，虚拟sp指针，")]),s._v(" "),a("p",[s._v("指令对应的解释器， 最上面的调度器，每个指令对应的handler，")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://tigress.cs.arizona.edu/transformPage/docs/virtualize/interpret-3.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("details")]),s._v(" "),a("p",[s._v("简单说下两个机器区别在于对于运算的实现，比如1+2")]),s._v(" "),a("p",[s._v("寄存器机器:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("regA = 1\nregB = 2\nregA += regB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("栈机器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("push 1\npush 2\nadd \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("其中的add是， 将栈顶两个值弹出，相加后结果压栈。")])]),s._v(" "),a("h3",{attrs:{id:"对vm的调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对vm的调度"}},[s._v("#")]),s._v(" 对vm的调度")]),s._v(" "),a("p",[s._v("对于opcode -> handler的映射关系。")]),s._v(" "),a("p",[s._v("一般比较常见的是while + switch组合的虚拟机， 在tigress-challenge中设置了六种对vm的调度。这里也简单笔记。")]),s._v(" "),a("p",[a("strong",[s._v("switch")]),s._v(" :")]),s._v(" "),a("p",[s._v("转换/分发， 最常见的方式， 一般opcode->handler会一对一，而且映射比较简单，")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            opcode1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n                handler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            opcode2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                handler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("ifnest")]),s._v(" :")]),s._v(" "),a("p",[s._v("连续if-else， 这个类似switch的方式：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("op1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n        handler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("op2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n        handler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" …\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("direct")]),s._v(" :")]),s._v(" "),a("p",[s._v("直接跳转， 分成一个个小段， 然后运行最后直接跳转到下一个应该的handler去运行。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nopcode1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n\thandler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nopcode2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n\thandler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("warning")]),s._v(" "),a("p",[s._v("对这个模式存在一些小疑惑，目前只是在tigress中看到相关思路， 但是没看到对应的实现。")])]),s._v(" "),a("p",[a("strong",[s._v("indirect")]),s._v(" :")]),s._v(" "),a("p",[s._v("间接跳转， 比上个直接跳转增加了个表， 通过表进行跳转，这样的情况下，opcode->handler会因为表的原因打乱，也可能存在多对一情况。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("jtab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nhandler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("jtab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nhandler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("jtab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("call")]),s._v(" :")]),s._v(" "),a("p",[s._v("情况每个handler设置一个函数，检索和函数调用的方式对opcode调用不同的函数，应该也是opcode->handler一对一映射，")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("op1fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("handler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("op2fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("handler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    \ncall "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("linear, binary, interpolation")]),s._v(" :")]),s._v(" "),a("p",[s._v("线性运算 插入值， 这里是在top做一个opcode->handler映射，然后跳转到对应handler运行，运行后跳转回到top继续。这种情况因为映射的关系，很容易造成多对一的情况，并且对应的位置比前面几个情况更难把握。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("top"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("searchalg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("prog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nhandler1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nhandler2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("tip")]),s._v(" "),a("p",[s._v("tigress-challenge0-0就是这样的处理，应该是比较复杂的方式，")]),s._v(" "),a("p",[s._v("当时的反汇编脚本先写了对应的映射，然后又写对应handler。")])]),s._v(" "),a("h3",{attrs:{id:"vm内的调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm内的调度"}},[s._v("#")]),s._v(" vm内的调度")]),s._v(" "),a("p",[s._v("vm内的调度主要是修正pc指针，实现跳转，通过跳转和比较实现if和for，")]),s._v(" "),a("p",[s._v("通过引入简单的帧等结构保存和修复， pc指针，虚拟栈，sp指针等，实现函数调用。")]),s._v(" "),a("h2",{attrs:{id:"特殊手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊手段"}},[s._v("#")]),s._v(" 特殊手段")]),s._v(" "),a("p",[s._v("这些手段都是在tigress项目中看到的，其中的一些目前还不能理解，但有一些类似于普通的小混淆手段在vm中的表现， 在这里记录下。")]),s._v(" "),a("h3",{attrs:{id:"vm内的opcode自修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm内的opcode自修改"}},[s._v("#")]),s._v(" vm内的opcode自修改")]),s._v(" "),a("p",[s._v("每次调用进入vm都会修正一部分opcode然后返回，并在最后")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://tigress.cs.arizona.edu/transformPage/docs/virtualize/reentrant-2.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"vm调度器的花指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vm调度器的花指令"}},[s._v("#")]),s._v(" vm调度器的花指令")]),s._v(" "),a("p",[s._v("插入不透明谓词， 对调度器位置进行混淆。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://tigress.cs.arizona.edu/transformPage/docs/virtualize/split-instruction-handlers-2.png",alt:""}})])])}),[],!1,null,null,null);t.default=e.exports}}]);