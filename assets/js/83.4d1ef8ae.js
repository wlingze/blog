(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{486:function(t,s,n){"use strict";n.r(s);var a=n(31),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vector-implementation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vector-implementation"}},[t._v("#")]),t._v(" vector implementation")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#结构"}},[t._v("结构")]),n("ul",[n("li",[n("a",{attrs:{href:"#实现上的结构"}},[t._v("实现上的结构")])]),n("li",[n("a",{attrs:{href:"#设计上的结构"}},[t._v("设计上的结构")])])])]),n("li",[n("a",{attrs:{href:"#功能"}},[t._v("功能")]),n("ul",[n("li",[n("a",{attrs:{href:"#基础功能"}},[t._v("基础功能")])]),n("li",[n("a",{attrs:{href:"#构造和析构函数"}},[t._v("构造和析构函数")])]),n("li",[n("a",{attrs:{href:"#运算符重载"}},[t._v("运算符重载")])]),n("li",[n("a",{attrs:{href:"#内存拓展相关"}},[t._v("内存拓展相关")])])])]),n("li",[n("a",{attrs:{href:"#内存拓展实现-insert"}},[t._v("内存拓展实现-insert")]),n("ul",[n("li",[n("a",{attrs:{href:"#设计"}},[t._v("设计")])]),n("li",[n("a",{attrs:{href:"#实现"}},[t._v("实现")])]),n("li",[n("a",{attrs:{href:"#m-fill-insert"}},[t._v("Mfill_insert")])]),n("li",[n("a",{attrs:{href:"#m-range-insert"}},[t._v("Mrange_insert")])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),n("h3",{attrs:{id:"实现上的结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现上的结构"}},[t._v("#")]),t._v(" 实现上的结构")]),t._v(" "),n("p",[t._v("这个在 allocator traits一节我们提到过，")]),t._v(" "),n("p",[t._v("在sgistl中容器结构为, "),n("code",[t._v("vector")]),t._v(" <- "),n("code",[t._v("_vector_base")]),t._v(" <- "),n("code",[t._v("_vector_alloc_base")]),t._v("。")]),t._v(" "),n("p",[t._v("在我的tinystl中结构；"),n("code",[t._v("vector")]),t._v(" <- "),n("code",[t._v("_vector_base")]),t._v("["),n("code",[t._v("_alloc_base_aux")]),t._v("]")]),t._v(" "),n("p",[t._v("其实是类似的，alloc_base实现对[需要实例化的分配器] 和 [不需要实例化的分配器]的统一封装， 提供统一的内存获取和回收函数，然后"),n("code",[t._v("_vector_base")]),t._v("实现对vector结构体本身的创建和删除， "),n("code",[t._v("vector")]),t._v("实现主要的功能和对其内部储存的数据的创建和销毁。")]),t._v(" "),n("p",[t._v("也就是 "),n("code",[t._v("vector_base")]),t._v("的创建销毁函数是向"),n("code",[t._v("vector")]),t._v("本身负责，而"),n("code",[t._v("vector")]),t._v("内的创建销毁函数是向内部储存的数据负责。")]),t._v(" "),n("h3",{attrs:{id:"设计上的结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计上的结构"}},[t._v("#")]),t._v(" 设计上的结构")]),t._v(" "),n("p",[t._v("vector的设计就是片连续内存空间，并且可以增长和缩减。类似于 自动动态增长的数组。")]),t._v(" "),n("p",[t._v("为了实现这一点，有三个重要成员变量:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("_M_start")]),t._v(" 表示内存的起点， 同时也是数据的起点。")]),t._v(" "),n("li",[n("code",[t._v("_M_end_of_storage")]),t._v(" 表示获得的内存的终点。")]),t._v(" "),n("li",[n("code",[t._v("_M_finish")]),t._v("表示保存的数据的终点。")])]),t._v(" "),n("h2",{attrs:{id:"功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),n("h3",{attrs:{id:"基础功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础功能"}},[t._v("#")]),t._v(" 基础功能")]),t._v(" "),n("p",[t._v("基础的begin end等比较简单，不再赘述")]),t._v(" "),n("h3",{attrs:{id:"构造和析构函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造和析构函数"}},[t._v("#")]),t._v(" 构造和析构函数")]),t._v(" "),n("p",[t._v("构造函数有关分配器、vector内存容量的要转入"),n("code",[t._v("_vector_base")]),t._v("的构造函数中。")]),t._v(" "),n("p",[t._v("构造函数支持以下几种参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("vector(const allocator_type &__a = allocator_type())")]),t._v("， 使用__a作为分配器，定义一个空的vector，")]),t._v(" "),n("li",[n("code",[t._v("vector(size_type __n, const value_type &__v, const allocator_type &__a = allocator_type())")]),t._v(" 拥有"),n("code",[t._v("__n")]),t._v("个"),n("code",[t._v("__v")]),t._v("数据的vector")]),t._v(" "),n("li",[n("code",[t._v("vector(size_type __n)")]),t._v("可以看作上面那个的特殊化，__n个默认数值的vector")]),t._v(" "),n("li",[n("code",[t._v("vector(const vector<_Tp, _Alloc> &__x)")]),t._v(",   通过另一个vector构造")]),t._v(" "),n("li",[n("code",[t._v("vector(_InputIterator __first, _InputIterator __last, const allocator_type &__a = allocator_type())")]),t._v(", 通过两个迭代器构造。")])]),t._v(" "),n("p",[t._v("析构函数实现比较简单，只需要destory整个vector内的数据即可，然后在vector_base销毁的时候回收整个vector的内存，")]),t._v(" "),n("h3",{attrs:{id:"运算符重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符重载"}},[t._v("#")]),t._v(" 运算符重载")]),t._v(" "),n("p",[t._v("这里要实现对于赋值语句的重载， 然后是"),n("code",[t._v("[]")]),t._v("运算符，")]),t._v(" "),n("p",[t._v("在全局运算符中要设置 "),n("code",[t._v("==")]),t._v(" 和 "),n("code",[t._v("<")]),t._v("两个符号，但是基本也是调用stl算法部分实现。")]),t._v(" "),n("h3",{attrs:{id:"内存拓展相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存拓展相关"}},[t._v("#")]),t._v(" 内存拓展相关")]),t._v(" "),n("p",[t._v("对赋值语句的重载也是内存拓展相关的一部分。还包括push pop insert reserve  erase等，")]),t._v(" "),n("p",[t._v("最主要的一点在与如果对vector的内存进行拓展， 要关注对原数值的复制/填充。")]),t._v(" "),n("p",[t._v("关键的点在于，要区分 要操作的内存是否已经被构造了。")]),t._v(" "),n("ul",[n("li",[t._v("如果被构造过，那么可以直接使用copy/fill函数，")]),t._v(" "),n("li",[t._v("如果没有运行过构造函数，则要使用uninitialized_copy/fill函数")])]),t._v(" "),n("h2",{attrs:{id:"内存拓展实现-insert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存拓展实现-insert"}},[t._v("#")]),t._v(" 内存拓展实现-insert")]),t._v(" "),n("p",[t._v("简单记录下insert的实现，在vector的实现中，这个算是比较复杂的一个了。")]),t._v(" "),n("h3",{attrs:{id:"设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[t._v("#")]),t._v(" 设计")]),t._v(" "),n("p",[t._v("insert可以接受三种参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("insert(iterator __position, const_reference __v = value_type())")]),t._v("， 在"),n("code",[t._v("__position")]),t._v(" 位置插入"),n("code",[t._v("__v")]),t._v(",")]),t._v(" "),n("li",[n("code",[t._v("insert(iterator __positon, size_type __n, const _Tp &__x)")]),t._v("在"),n("code",[t._v("__position")]),t._v("位置插入"),n("code",[t._v("__n")]),t._v("个"),n("code",[t._v("__v")]),t._v("，")]),t._v(" "),n("li",[n("code",[t._v("insert(iterator __position, _InputIter __first, _InputIter __last)")]),t._v("向"),n("code",[t._v("__position")]),t._v("位置插入"),n("code",[t._v("[__first, __last)")]),t._v(",\n"),n("ul",[n("li",[t._v("这种情况要注意一点，如果_Tp=size_typ的话，那么可能会将第二种情况误判到这里，所以要通过"),n("code",[t._v("_Is_integer")]),t._v("进行判断，迭代器肯定不会是integer。")])])])]),t._v(" "),n("h3",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),n("p",[t._v("直接插入一个数值，")]),t._v(" "),n("ul",[n("li",[t._v("首先判断下是否需要拓展内存了，\n"),n("ul",[n("li",[t._v("如果需要的话进入"),n("code",[t._v("_M_insert_aux")]),t._v(" ，申请一块大内存，复制前部分、插入"),n("code",[t._v("__v")]),t._v("、复制后部分即可。")])])]),t._v(" "),n("li",[t._v("如果是末尾一个的话，也就等同push_back， 前面判断过不需要拓展，那么直接放在最后，\n"),n("ul",[n("li",[t._v("这里注意"),n("code",[t._v("_M_finish")]),t._v("是没有初始化的， 所以直接使用"),n("code",[t._v("construct")])])])]),t._v(" "),n("li",[t._v("如果插入中间，则直接"),n("code",[t._v("[_pos, _M_finish)")]),t._v("复制到"),n("code",[t._v("[_pos+1, _M_finish+1)")]),t._v("即可，但是这里"),n("code",[t._v("_M_finish")]),t._v("没初始化则先进行初始化，然后可以copy，")])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("  iterator "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" const_reference __v "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("value_type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    size_type distance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" __position "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _M_end_of_storage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_insert_aux")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__position "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_finish"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_finish"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __position "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__position "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _M_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" distance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_insert_aux")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" const_reference __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    size_type _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    size_type _new_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    iterator _new_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    iterator _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    __STL_TRY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _new_finish"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__STL_UNWIND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_deallocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_deallocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    _M_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    _M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br")])]),n("p",[t._v("我们提到了，如果_Tp=size_typ的话，那么可能会将第二种情况误判到第三种情况。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_type __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _Tp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("__x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_fill_insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_InputIter")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _InputIter __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _InputIter __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Is_integer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_InputIter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("_Integral _is_integral"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_insert_dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_is_integral")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Integer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_insert_dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Integer __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Integer __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          __true_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_fill_insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("__n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("__v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_InputIter")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_insert_dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _InputIter __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _InputIter __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          __false_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_range_insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br")])]),n("h3",{attrs:{id:"m-fill-insert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#m-fill-insert"}},[t._v("#")]),t._v(" _M_fill_insert")]),t._v(" "),n("p",[t._v("这里需要特别注意， vector中内存状态是"),n("code",[t._v("[start, finish), end]")]),t._v("， start-finish之间是初始化以后的内存， finish-end是未初始化的，因此要对几个状态分别进行判断和处理。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    [start : __p : finish)--end], -> [start:__v*__n:finish)--end]\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_fill_insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_type __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" const_reference __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("__n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sufficient memory")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" size_type _distance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_distance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          [start, fill copy |finish| uninitialize_copy]\n          p->p+n->f->f+n\n            f, f+n  <=  f-n, f  u_copy\n            p+n, f  <=  p, f-n  copy\n            p, p+n              fill\n\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill_n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          [start, fill,|finish| uninitialize_fill,  uninitialize_copy]\n\n           p->f->p+n->f+n\n            p+n, f+n <= p, f u_copy\n            f, p+n           u_fill_n\n            p, f             fill_n\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_fill_n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill_n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insufficient memory, allocate memory again.")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n        s->p->f\n        s->i . i->f\n      */")]),t._v("\n      size_type _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      size_type _new_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_old_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      iterator _new_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      iterator _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      __STL_TRY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_fill_n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__STL_UNWIND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_deallocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_deallocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br")])]),n("h3",{attrs:{id:"m-range-insert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#m-range-insert"}},[t._v("#")]),t._v(" _M_range_insert")]),t._v(" "),n("p",[t._v("和"),n("code",[t._v("_M_fill_insert")]),t._v("一样，对几个位置分别进行处理。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_range_insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iterator __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iterator __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__last "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" size_type _n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" __last "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" size_type _distance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_distance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          s p p+n f f+n\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          s p f p+n f+n\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _distance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _distance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      size_type _n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" __last "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" __first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      size_type _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      size_type _new_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _old_size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_old_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      iterator _new_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      iterator _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      __STL_TRY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_M_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _new_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uninitialized_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _M_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__STL_UNWIND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_M_deallocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      _M_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_finish "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _new_finish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      _M_end_of_storage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _M_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _new_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);