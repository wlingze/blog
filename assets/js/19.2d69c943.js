(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{514:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"miasm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miasm"}},[t._v("#")]),t._v(" miasm")]),t._v(" "),a("p",[t._v("最开始接触到是在fcsc的keykoolol题目wp中， 使用miasm处理一个vm， 同时脚本中并没有出现对于255个opcode对应的设置，但是却像一个反汇编器一样直接打印出类汇编代码，似乎挺神奇， 而后在tigress挑战中的challenge0也在其官方blog有对应wp， 于是开始学习，")]),t._v(" "),a("p",[t._v("这个框架目前似乎还没有很完备的资料， 官方的blog简介了使用方向， 但是因为版本更新有些脚本甚至出现了问题，")]),t._v(" "),a("p",[t._v("翻到了一个这个， "),a("a",{attrs:{href:"https://miasmdoc.ajax.re/doxygen/html/namespacemiasm2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("miasm - api"),a("OutboundLink")],1),t._v("但是比较老，这个框架更新还是比较频繁， 另外就是对照"),a("a",{attrs:{href:"https://github.com/cea-sec/miasm",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),a("OutboundLink")],1),t._v("中的注释进行学习， 注释倒是比较多， 而且代码质量感觉也比较不错。")]),t._v(" "),a("blockquote",[a("p",[t._v("这个框架的学习过程中对于源码的翻看更多了些， 没有一些相关资料， 使用起来的一些报错， 通过直接查找源码中的注释和回显信息等进行解决。")])]),t._v(" "),a("p",[t._v("首先应该比较不同的是这个动态符号执行技术， 即混合使用符号执行和普通的输入确定值的调试，")]),t._v(" "),a("p",[t._v("主要思路大致是，因为符号执行会容易造成路径爆炸的问题， 于是提出， 先模拟程序的正常执行， 然后只在关键需要的位置插入符号并在另一端的对应位置取出， 由此通过输入的确定值使得运行过程是固定的， 不会有路径爆炸的情况，而同时使用符号记录运算处理过程， 标记路径， 并自动的通过内置的ir转化为类汇编的语言。")]),t._v(" "),a("blockquote",[a("p",[t._v("因此， 这个脚本写起来， 有点像ida python动调的脚本。")])]),t._v(" "),a("h2",{attrs:{id:"运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),a("p",[t._v("首先是要保证程序在框架给出的环境内可以正常运行， 要达到的效果是， 运行脚本并指定对应程序， 除了miasm框架对应的提示信息，输入输出运算判断应该是和直接运行程序无二。")]),t._v(" "),a("h3",{attrs:{id:"sandbox"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sandbox"}},[t._v("#")]),t._v(" sandbox")]),t._v(" "),a("p",[t._v("首先是一个运行环境的设置，miasm 中使用sandbox的概念，，miasm在"),a("code",[t._v("/miasm/analysis/sandbox.py")]),t._v("预设好了以下几个sandbox：")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("details")]),t._v(" "),a("ul",[a("li",[t._v("对于linux系统：\n"),a("ul",[a("li",[t._v("aarch64l")]),t._v(" "),a("li",[t._v("armb_str")]),t._v(" "),a("li",[t._v("arml_str")]),t._v(" "),a("li",[t._v("arml")]),t._v(" "),a("li",[t._v("armtl")]),t._v(" "),a("li",[t._v("mips32b")]),t._v(" "),a("li",[t._v("ppc32b")]),t._v(" "),a("li",[t._v("x86_32")]),t._v(" "),a("li",[t._v("x86_64")])])]),t._v(" "),a("li",[t._v("对于windows系统：\n"),a("ul",[a("li",[t._v("x86_64")]),t._v(" "),a("li",[t._v("x86_32")])])])])]),t._v(" "),a("p",[t._v("使用就如下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  miasm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("analysis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sandbox "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Sandbox_Linux_x86_64\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("然后进行简单设置：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("parser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sandbox_Linux_x86_64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ELF sandboxer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nparser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_argument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ELF Filename"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noptions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse_args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sandbox_Linux_x86_64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("globals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("首先是获取parser对象， 其作用是处理运行脚本时的命令行参数，然后使用options获取到解析出命令行参数的namespace， 然后设置出sandbox对象，并开始运行即可。")]),t._v(" "),a("h3",{attrs:{id:"数据和内存处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据和内存处理"}},[t._v("#")]),t._v(" 数据和内存处理")]),t._v(" "),a("p",[t._v("主要通过sandbox.jitter， 这是一个jitter对象， 是运行时内置的一个jit engine， 通过这个可以访问和修改正在运行的程序的内存。 相关的函数在python中定义在"),a("code",[t._v("/miasm/jitter/jitload.py")]),t._v("， 基本上全部会转入到jitter.vm对象， 这个对象主要是"),a("code",[t._v("/miasm/jitter/vm_mngr.c")]),t._v(", "),a("code",[t._v("/miasm/jitter/vm_mngr_py.c")]),t._v("中，")]),t._v(" "),a("p",[t._v("其中python中定义的"),a("code",[t._v("jitter.get_c_str")]),t._v("和"),a("code",[t._v("jitter.set_c_str")]),t._v("都会转到"),a("code",[t._v("jitter.vm.get_mem")]),t._v("和"),a("code",[t._v("jitter.vm.set_mem")]),t._v("， 这是最常用的四个， 一般用在对libc函数的实现。")]),t._v(" "),a("p",[t._v("另外对于内存页等的实现， 有"),a("code",[t._v("jitter.vm.add_memory_page")]),t._v("进行内存页的设置， 一般出现canary的时候从fs[0x28]取值， 将会使用这个处理，不然程序无法访问到fs[0x28]的位置。")]),t._v(" "),a("h3",{attrs:{id:"实现-libc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现-libc"}},[t._v("#")]),t._v(" 实现 libc")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("warning")]),t._v(" "),a("p",[t._v("和angr类似， 这个程序运行在python的miasm框架的环境内，如果他调用了libc函数，都无法找到， 因此我们需要在miasm环境中构造这个函数，在miasm中，我们可以直接在脚本中设置一个对应的函数即可，运行时会自动寻找和调用。")]),t._v(" "),a("p",[t._v("目前应该"),a("code",[t._v("__libc_start_main")]),t._v("还有几个不需要，")]),t._v(" "),a("p",[t._v("可以直接运行， 看报错提示缺少， 再修复几个，")])]),t._v(" "),a("p",[t._v("在miasm中已经实现了好几个，位置在"),a("code",[t._v("/miasm/os_dep/linux_stdlib.py")]),t._v("， 可以"),a("code",[t._v("import ×")]),t._v("进来， 但是可能也会因为函数名和提取参数啥的不对，")]),t._v(" "),a("p",[t._v("这里简单说明几个libc函数的构造，")]),t._v(" "),a("p",[t._v("首先传入函数的应该是"),a("code",[t._v("jitter")]),t._v("， 这个我们前面说道的获取字符串或者内存啥的，也基本都是在这里使用的。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" xxx_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_args_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_ret_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("一般一个模拟libc函数应该如上示，")]),t._v(" "),a("p",[t._v("关于函数对应的参数和返回值的获取和设置， 中间进行数据处理， 在一般情况下，也并不需要编写非常完备的函数功能， 只要符合当前程序应该运行的状态即可，")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("tip")]),t._v(" "),a("p",[t._v("比如在有些程序里， printf里从没有出现格式化字符串+参数的形式， 那就可以在实现的时候当作一个puts之类的， 简单实现其功能，")])]),t._v(" "),a("p",[t._v("具体的例子可以翻看"),a("code",[t._v("linux_stdlib.py")]),t._v("文件中，或者在实际操作中的脚本，")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("details")]),t._v(" "),a("p",[t._v("这里简单例子:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxx_fgets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n\t\t原型： char *fgets(char *str, int n, FILE *stream)\n\t\t在程序中stream一直为stdin, 因此直接用input了， \n\t'''")]),t._v("\n    ret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_args_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stream"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_mem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_ret_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxx___printf_chk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n    \t原型：int printf(const char *format, ...)\n    \t值得注意的是参数里的's'， 必须加上就正确了， 但是不清楚啥原因。\n    '''")]),t._v("\n    ret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_args_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"format"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_c_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func_ret_systemv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret_ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])])]),t._v(" "),a("h3",{attrs:{id:"命令行参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数"}},[t._v("#")]),t._v(" 命令行参数")]),t._v(" "),a("p",[t._v("对于程序运行时需要命令行输入的参数，")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mimic_env "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ture\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这个变量是在Sandbox_Linux_x86_64对象初始化的时候进行判断，并获取命令行参数，压入栈中。"),a("a",{attrs:{href:"https://github.com/cea-sec/miasm/blob/master/miasm/analysis/sandbox.py#L641",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里"),a("OutboundLink")],1),t._v(",")]),t._v(" "),a("p",[t._v("然后输入命令行参数：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("command_line "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'....'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"内存段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存段"}},[t._v("#")]),t._v(" 内存段")]),t._v(" "),a("p",[t._v("一般使用栈等都不会有太大问题， 但是当程序使用canary时， 将会导致问题， 于是我们要手动设置fs的内存和canary所取的 fs[0x28]位置的数据，")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" miasm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csts      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PAGE_READ\n\n\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ir_arch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do_all_segm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\nFS_0_ADDR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x7ff70000")]),t._v("\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4")]),t._v("\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_segm_base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FS_0_ADDR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_memory_page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FS_0_ADDR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x28")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_READ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('b"\\x42\\x42\\x42\\x42\\x42\\x42\\x42\\x42"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Stack canary FS[0x28]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("在"),a("code",[t._v("miasm.jitter.csts")]),t._v("中定义的都是一堆的关于权限控制等常量，")]),t._v(" "),a("h2",{attrs:{id:"dse-技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dse-技术"}},[t._v("#")]),t._v(" dse 技术")]),t._v(" "),a("p",[t._v("当我们已经成功可以让程序正常的在miasm环境中运行的时候，可以开始考虑加入dse engine，")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" miasm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("analysis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dse "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DSEEngine\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"初始化和设置dse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化和设置dse"}},[t._v("#")]),t._v(" 初始化和设置dse")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("dse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DSEEngine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("machine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_lib_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("libs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("globals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("这个dse engine对象定义在"),a("code",[t._v("/miasm/analysis/dse.py")]),t._v("， 初始化传入sandbox内对应的machine属性即可，")]),t._v(" "),a("p",[t._v("注意这个"),a("code",[t._v("dse.add_lib_handler(sb.libs, globals())")]),t._v("方法， 作用是载入dse后， 所有的libc函数， 如函数"),a("code",[t._v("{name}")]),t._v(", 设置到对应的"),a("code",[t._v("{name}_symb")]),t._v("函数，如果没有查找到对应的"),a("code",[t._v("{name}_symb")]),t._v("， 则会设置到"),a("a",{attrs:{href:"https://github.com/cea-sec/miasm/blob/master/miasm/analysis/dse.py#L260",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("default_func")]),t._v("函数"),a("OutboundLink")],1),t._v(", 提示这个函数不存在，需要定义。")]),t._v(" "),a("p",[t._v("注意这里设置的是handler， 最后"),a("code",[t._v("add_lib_handler")]),t._v("会解析出名字以后调用"),a("code",[t._v("add_handler")]),t._v("设置，")]),t._v(" "),a("h3",{attrs:{id:"dse-attach到jitter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dse-attach到jitter"}},[t._v("#")]),t._v(" dse attach到jitter")]),t._v(" "),a("p",[t._v("定义好dse对象以后，运行仍然是老样子，要想开始记录符号应该使用:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("dse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这一句开始我们的dse对象才会投入使用，而且这以后的调用libc都会是调用对应的"),a("code",[t._v("{name}_symb")]),t._v("函数，如果没有定义的话也会开始看到相关报错了。")]),t._v(" "),a("p",[t._v("关于这一句的位置，定义好dse以后就可以使用attach，但是一般使用在关键位置附近的libc函数设置一个， 在函数内使用可以加一个"),a("code",[t._v("global dse")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"instrumentation和handler相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instrumentation和handler相关"}},[t._v("#")]),t._v(" instrumentation和handler相关")]),t._v(" "),a("p",[t._v("设置好dse和attach以后可以开始设置使用instrumentation和handler，这是dse对象内的两个字典：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /miasm/analysis/dse.py ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# class DSEEnigne ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\tself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# addr -> callback(DSEEngine instance)")]),t._v("\n\tself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instrumentation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# addr -> callback(DSEEngine instance)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Add a @callback for address @addr before any state update.\n    The state IS NOT updated after returning from the callback\n    @addr: int\n    @callback: func(dse instance)"""')]),t._v("\n    self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_instrumentation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Add a @callback for address @addr before any state update.\n    The state IS updated after returning from the callback\n    @addr: int\n    @callback: func(dse instance)"""')]),t._v("\n    self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instrumentation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[t._v("里面储存的是地址和对应调用的函数，我们可以在脚本中设置好一个函数， 然后使用"),a("code",[t._v("dse.add_instrumentation")]),t._v("或"),a("code",[t._v("dse.add_handler")]),t._v("设置地址和这个函数，")]),t._v(" "),a("p",[t._v("这两个字典的使用看起来基本类似，区别是handle不会刷新状态， instrumentation会刷新状态,")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("warning")]),t._v(" "),a("p",[t._v("占坑")]),t._v(" "),a("p",[t._v("目前不太清楚这个关于状态刷新的注释啥意思😅 😅😅")]),t._v(" "),a("p",[t._v("不过看到相关几个例子， 一般手动设置程序中的某些位置的时候似乎都是使用instrumentation，")]),t._v(" "),a("p",[t._v("当然，还有个update_state的方法， 但是看起来并不一样...")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("details")]),t._v(" "),a("p",[t._v("目前已经看到的， jitter中运行到对应一些位置应该是回去调用dse对象的"),a("a",{attrs:{href:"https://github.com/cea-sec/miasm/blob/master/miasm/analysis/dse.py#L320",target:"_blank",rel:"noopener noreferrer"}},[t._v("callback函数"),a("OutboundLink")],1),t._v("，其中代码如下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /miasm/analysis/dse.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# class DSEEinge")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     def callback():")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cur_addr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cur_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cur_addr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instrumentation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instrumentation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cur_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("这里是关于运行设置好的函数的位置， 因此可以看到我们设置的函数应该参数为dse对象，")]),t._v(" "),a("p",[t._v("另外一点就是在handler运行后直接return， 但是对于instrumentation运行后继续运行了后面的部分在最后进行返回，这应该就是两者的差别位置，也是关于状态刷新之类的。")])]),t._v(" "),a("h3",{attrs:{id:"符号化-和-状态刷新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#符号化-和-状态刷新"}},[t._v("#")]),t._v(" 符号化 和 状态刷新")]),t._v(" "),a("p",[t._v("类似z3中设置符号的方式， miasm中使用"),a("code",[t._v("Expr")]),t._v("系列的对象，是miasm中的ir中间语言的表示，")]),t._v(" "),a("p",[t._v("一般这样一个对象表示一个符号化的变量，通过"),a("code",[t._v("dse.update_state()")]),t._v("方法插入到程序中，通过"),a("code",[t._v("dse.eval_expr()")]),t._v("方法获取输入后的已经记录了运算的一个带符号表达式，")]),t._v(" "),a("p",[t._v("注意在插入所有符号前， 应该在attach以后，使用"),a("code",[t._v("dse.update_state_from_concrete()")]),t._v("， 从原本的由确定值运行的环境中载入到dse环境。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("tip")]),t._v(" "),a("p",[t._v("最简单的一个示例是miasm-blog中的tigress0-challenge0的处理，在文章"),a("a",{attrs:{href:"https://miasm.re/blog/2017/10/05/playing_with_dynamic_symbolic_execution.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Playing with Dynamic symbolic execution"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("我下一步也将会在博客的wp区, tigress0-0中写上对应的wp")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("dse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update_state_from_concrete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exal_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"获取和设置寄存器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取和设置寄存器"}},[t._v("#")]),t._v(" 获取和设置寄存器")]),t._v(" "),a("p",[t._v("在加入dse以后，环境中一共存在两套数据， 一个是原本的具体值， 一个是符号化的数据。")]),t._v(" "),a("p",[t._v("具体值，通过"),a("code",[t._v("dse.jitter.cpu.xx")]),t._v("访问寄存器， 或者"),a("code",[t._v("sb.jitter.cpu.xx")]),t._v("这两个是等同的。 返回值是一个int类型，可以直接获取。赋值直接使用"),a("code",[t._v("=")]),t._v("即可。")]),t._v(" "),a("p",[t._v("符号值， 通过"),a("code",[t._v("1dse.ir_arch.arch.regs.xx")]),t._v("访问寄存器，赋值通过"),a("code",[t._v("dse.update({..: ..})")]),t._v("赋值进去一个符号值。获取通过"),a("code",[t._v("dse.eval_expr(xx)")]),t._v("， 即可获取对应带符号的表达式。")]),t._v(" "),a("h2",{attrs:{id:"bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bug"}},[t._v("#")]),t._v(" bug")]),t._v(" "),a("p",[t._v("学习过程中发现的代码上的问题， 主要是错误回显信息没更新导致有几个小问题，")]),t._v(" "),a("p",[t._v("不过也不一定修没修， 这个框架更新还是比较频繁的，")]),t._v(" "),a("h3",{attrs:{id:"get-str-ansi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-str-ansi"}},[t._v("#")]),t._v(" get_str_ansi")]),t._v(" "),a("p",[t._v("首先是"),a("code",[t._v("jitter.get_str_ansi(args.nptr)")]),t._v("这个函数已经不再支持， 调用将会报错， 提示去使用另一个函数，源码中如下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# miasm/jitter/jitload.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_str_ansi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_char"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Deprecated: use os_dep.win_api_x86_32.get_win_str_a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("但是我们会发现，在"),a("code",[t._v("miasm/os_dep/win_api_x86_32.py")]),t._v("中并没有这个函数， 他已经被转移到了"),a("code",[t._v("miasm/os_dep/common.py")]),t._v("中， 源码：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# miasm/os_dep/common.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_win_str_a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ad_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_char"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("因此这个调用应该修改为：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" miasm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("os_dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("common  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" get_win_str_a\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_win_str_a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("同样的get_str_unic函数也是一样：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# miasm/jitter/jitload.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_str_unic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_char"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Deprecated: use os_dep.win_api_x86_32.get_win_str_a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);