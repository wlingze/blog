(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{519:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"xpdf-afl-fuzz"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xpdf-afl-fuzz"}},[t._v("#")]),t._v(" xpdf afl fuzz")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#fuzz-部分"}},[t._v("fuzz 部分")])]),s("li",[s("a",{attrs:{href:"#crash分类"}},[t._v("crash分类")])]),s("li",[s("a",{attrs:{href:"#分析"}},[t._v("分析")]),s("ul",[s("li",[s("a",{attrs:{href:"#gmallocn"}},[t._v("gmallocn")])]),s("li",[s("a",{attrs:{href:"#dos"}},[t._v("dos")])]),s("li",[s("a",{attrs:{href:"#null指针引用"}},[t._v("null指针引用")])]),s("li",[s("a",{attrs:{href:"#while-1"}},[t._v("while 1")])])])]),s("li",[s("a",{attrs:{href:"#改进"}},[t._v("改进")])])])]),s("p"),t._v(" "),s("p",[t._v("记录一次失败的fuzz经历，")]),t._v(" "),s("p",[t._v("其实去年九月有fuzz过pycdc但是一直没有笔记，过年的时候更换系统文件都丢了，觉得很可惜，于是这次稍微记录一下，")]),t._v(" "),s("blockquote",[s("p",[t._v("因为工作原因在写golang, 然后在fuzz测试过程中写了一些小工具都是python，")]),t._v(" "),s("p",[t._v("xpdf这个cpp让我看的非常之  "),s("strong",[t._v("噎得慌")])])]),t._v(" "),s("h2",{attrs:{id:"fuzz-部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fuzz-部分"}},[t._v("#")]),t._v(" fuzz 部分")]),t._v(" "),s("p",[t._v("因为也没什么好想法去魔改fuzzer，就是直接开始aflpp跑了，目标也有源码直接可以标准的进行测试。")]),t._v(" "),s("p",[t._v("我在"),s("a",{attrs:{href:"https://github.com/mozilla/pdf.js/tree/master/test/pdfs",target:"_blank",rel:"noopener noreferrer"}},[t._v("mozila/pdf.js/test"),s("OutboundLink")],1),t._v("找到了大量的输入样例，然后直接开始跑。")]),t._v(" "),s("h2",{attrs:{id:"crash分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#crash分类"}},[t._v("#")]),t._v(" crash分类")]),t._v(" "),s("p",[t._v("跑了大概三四个小时？大概出现了36k左右的crash, afl会记录非重复的crash, 于是只有780左右被记录了下来，")]),t._v(" "),s("p",[t._v("然后面临第一个问题是如何进行crash分类， 之前pycdc的fuzz中我编写过一个 生成gdb脚本然后获取gdb logfile并通过其中的栈回溯进行分类的小工具，效果还可，但是没封装到一块，好几个指令显得有点笨。")]),t._v(" "),s("p",[t._v("然后看了下"),s("a",{attrs:{href:"https://gitlab.com/rc0r/afl-utils",target:"_blank",rel:"noopener noreferrer"}},[t._v("afl-utils"),s("OutboundLink")],1),t._v("工具， 发现他其实也是这个思路，而且其中的gdb脚本直接用了另一个项目"),s("a",{attrs:{href:"https://github.com/jfoote/exploitable",target:"_blank",rel:"noopener noreferrer"}},[t._v("exploitable"),s("OutboundLink")],1),t._v(",")]),t._v(" "),s("p",[t._v("但是这里有很多比较粗糙的地方，")]),t._v(" "),s("ul",[s("li",[t._v("对于重复的判断只是通过文件的hash,\n"),s("ul",[s("li",[t._v("可能出现很多相同的crash， 按照栈回溯去重更稳妥一些。")])])]),t._v(" "),s("li",[t._v("在获取gdb运行结果的时候直接通过 "),s("code",[t._v("subprocess.check_output")]),t._v("进行，\n"),s("ul",[s("li",[t._v("主要是没有管其他插件的加载问题， 万一有个gef pwngdb, 那么这个每次运行整个context都会被检测一遍，这个简直不可忍受。")])])])]),t._v(" "),s("p",[t._v("于是我对这个程序进行了一些"),s("a",{attrs:{href:"https://github.com/wlingze/afl-utils",target:"_blank",rel:"noopener noreferrer"}},[t._v("小修改"),s("OutboundLink")],1),t._v("，主要是以上两点。")]),t._v(" "),s("p",[t._v("然后对于exploitable， 增加了一个"),s("a",{attrs:{href:"https://github.com/wlingze/exploitable/commit/4f63e52722fc37750e9c5f8e9cb9b4f6d6835d1a",target:"_blank",rel:"noopener noreferrer"}},[t._v("对于是否在运行的检测"),s("OutboundLink")],1),t._v("，有一些crash崩溃后直接退出，运行exploitable的话会报错， 这一部分的原因我还没搞清楚。")]),t._v(" "),s("p",[t._v("于是经过这两个工具的处理，上面的780左右的crash剩下了33个，")]),t._v(" "),s("p",[t._v("这里我发现了一个这套工具存在的问题：")]),t._v(" "),s("ul",[s("li",[t._v("对于栈回溯的判断是整个栈回溯的hash, 会有一些崩溃点相同的crash,")])]),t._v(" "),s("p",[t._v("这个问题的话，可以增加一个对于crash崩溃点向上两/三层的记录+比较，但是也会不太稳，决定宁可误判不能放过，没改。")]),t._v(" "),s("p",[t._v("然后人工稍微看一下，就剩下了7个crash。")]),t._v(" "),s("h2",{attrs:{id:"分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),s("h3",{attrs:{id:"gmallocn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gmallocn"}},[t._v("#")]),t._v(" gmallocn")]),t._v(" "),s("p",[t._v("这个比较简单，其实就是xpdf内部内存全部使用统一的接口去申请，然后如果过大会触发"),s("code",[t._v("gMemError")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gmallocn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" objSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" GMEM_EXCEP "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" objSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("objSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" nObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" nObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" INT_MAX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" objSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gMemError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bogus memory allocation size"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gmalloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("这个就是检查出错了，但是因为下层有调用"),s("code",[t._v("throw")]),t._v(" 会触发crash.")]),t._v(" "),s("h3",{attrs:{id:"dos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dos"}},[t._v("#")]),t._v(" dos")]),t._v(" "),s("p",[t._v("有三个不同的dos洞， 发现这种东西确实特别容易写出来dos， 只要引用循环基本上就会开始无限递归。")]),t._v(" "),s("p",[t._v("分别是这三个位置 "),s("code",[t._v("Catalog::countPageTree")]),t._v(",  "),s("code",[t._v("Catalog::readPageLabelTree2")]),t._v("， "),s("code",[t._v("AcroForm::scanField")])]),t._v(" "),s("p",[t._v("然后看了下论坛发现大伙都已经交过了，而且作者说下个大版本xpdf 5系列会加入对象引用循环的检测，这几个crash也索然无味。")]),t._v(" "),s("h3",{attrs:{id:"null指针引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null指针引用"}},[t._v("#")]),t._v(" null指针引用")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("stack_frame_hash: 3472571ec2746ce0aafa603325b09e70\nstack_frame\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!XFAScanner::getFieldValue+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!XFAScanner::scanField+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!XFAScanner::scanNode+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!XFAScanner::scanNode+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!XFAScanner::load+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!AcroForm::load+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!Catalog::Catalog+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!PDFDoc::setup2+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!PDFDoc::setup+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!PDFDoc::PDFDoc+0x0\n/home/wlz/lab/fuzz/Fuzzing101/fuzzing_xpdf/install/pdftotext!main+0x0\nINVOKING_0\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("这个也没啥用，")]),t._v(" "),s("p",[t._v("在函数"),s("code",[t._v("XFAScanner.cc: XFAScanner::scanNode")]),t._v("函数中，调用函数"),s("code",[t._v("XFAScanner::scanField")]),t._v("，\n传入的第二个参数默认值为0, 在if语句中进行复制，则可以不进行赋值直接进入函数运行，传入0,")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2022/04/11/Wq3aJVIBZ1ENfPD.png",alt:"image-20220411141323342"}})]),t._v(" "),s("p",[t._v("然后传入下层函数，")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2022/04/11/PK1mIF78MgnWjkN.png",alt:"image-20220411141224049"}})]),t._v(" "),s("p",[s("code",[t._v("XFAScanner::getFieldValue")]),t._v("中， 会尝试获取这个"),s("code",[t._v("name->getCString")]),t._v("这时候会使用这个0进行引用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2022/04/11/VhC4dqcbMkSzv7N.png",alt:"image-20220411141139698"}})]),t._v(" "),s("p",[t._v("无法利用。")]),t._v(" "),s("h3",{attrs:{id:"while-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while-1"}},[t._v("#")]),t._v(" while 1")]),t._v(" "),s("p",[t._v("出现了一个死循环的crash, 但是不会导致程序崩溃， 在尝试跟踪。")]),t._v(" "),s("h2",{attrs:{id:"改进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改进"}},[t._v("#")]),t._v(" 改进")]),t._v(" "),s("p",[t._v("以后应该看一下结构化fuzz之类实现，afl的bit级别的变异对于纯二进制文件来说挺合适的，但是pdf中只有stream中是这样的， 整体来说pdf还是有自己的比较严格的格式的文件，afl的变异策略并不适合来进行pdf的fuzz。")])])}),[],!1,null,null,null);a.default=e.exports}}]);