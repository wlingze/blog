(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{517:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"codeql-入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#codeql-入门"}},[s._v("#")]),s._v(" codeql 入门")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#环境"}},[s._v("环境")])]),a("li",[a("a",{attrs:{href:"#ql语法"}},[s._v("ql语法")]),a("ul",[a("li",[a("a",{attrs:{href:"#基础"}},[s._v("基础")])]),a("li",[a("a",{attrs:{href:"#类型"}},[s._v("类型")])]),a("li",[a("a",{attrs:{href:"#where逻辑表达式"}},[s._v("where逻辑表达式")])]),a("li",[a("a",{attrs:{href:"#聚合"}},[s._v("聚合")])]),a("li",[a("a",{attrs:{href:"#谓词-predicate"}},[s._v("谓词 Predicate")])]),a("li",[a("a",{attrs:{href:"#判断语句"}},[s._v("判断语句")])]),a("li",[a("a",{attrs:{href:"#定义类"}},[s._v("定义类")])]),a("li",[a("a",{attrs:{href:"#递归"}},[s._v("递归")])]),a("li",[a("a",{attrs:{href:"#传递闭包"}},[s._v("传递闭包")])]),a("li",[a("a",{attrs:{href:"#codeql查询"}},[s._v("codeql查询")])])])])])]),a("p"),s._v(" "),a("p",[s._v("一个挺有趣的思路，将代码整理成某种格式的数据库， 然后使用类sql语法进行查询，从而更加效率的进行源码审计，")]),s._v(" "),a("p",[s._v("入门推荐跟着 "),a("a",{attrs:{href:"https://lab.github.com/githubtraining/codeql-u-boot-challenge-(cc++)",target:"_blank",rel:"noopener noreferrer"}},[s._v("github发布的课程"),a("OutboundLink")],1),s._v(" 做即可，")]),s._v(" "),a("p",[s._v("相关文档：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://codeql.github.com/docs/writing-codeql-queries/introduction-to-ql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ql tutorials"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://codeql.github.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("codeql-documentation"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[s._v("#")]),s._v(" 环境")]),s._v(" "),a("p",[s._v("主要使用vscode,")]),s._v(" "),a("p",[s._v("首先下载"),a("a",{attrs:{href:"https://github.com/github/codeql-cli-binaries/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("codeqlcli二进制文件"),a("OutboundLink")],1),s._v("，并且设置环境变量，")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export PATH=\\'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(':/usr/class/codeql"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.zshrc\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zshrc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("vscode下载"),a("a",{attrs:{href:"https://github.com/github/vscode-codeql",target:"_blank",rel:"noopener noreferrer"}},[s._v("codeql的拓展"),a("OutboundLink")],1),s._v("，直接在vscode内下载也可，然后设置下"),a("code",[s._v("Extensions > Code Ql > Cli: Executable Path")]),s._v("写入对应codeql文件路径，")]),s._v(" "),a("p",[s._v("并在vscode中打开"),a("a",{attrs:{href:"https://github.com/github/vscode-codeql-starter/",target:"_blank",rel:"noopener noreferrer"}},[s._v("此工作区"),a("OutboundLink")],1),s._v("， 并且记得以递归方式clone下来这个仓库")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --recursive git@github.com:github/vscode-codeql-starter.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后导入数据库，并将查询文件保存的那个文件夹从此工作区中打开，")]),s._v(" "),a("h2",{attrs:{id:"ql语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ql语法"}},[s._v("#")]),s._v(" ql语法")]),s._v(" "),a("p",[s._v("这是一种"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%AE%A3%E5%91%8A%E5%BC%8F%E7%B7%A8%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("声明式编程"),a("OutboundLink")],1),s._v("，这类语言主要是在描述规则关系或者函数映射，主要是来描述问题(what)，而常规的"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%8C%87%E4%BB%A4%E5%BC%8F%E7%B7%A8%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("指令式编程"),a("OutboundLink")],1),s._v("主要是写运行如何处理问题(how)，")]),s._v(" "),a("p",[s._v("ql其实和sql有些相似，但也有不同， 他们都是在描述逻辑规则，他们都是声明式编程中的"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%82%8F%E8%BC%AF%E7%B7%A8%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("逻辑编程"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("ql主要使用逻辑连接词(如"),a("code",[s._v("and")]),s._v(" "),a("code",[s._v("or")]),s._v(" "),a("code",[s._v("not")]),s._v(")， 限定词(如"),a("code",[s._v("forall")]),s._v(" "),a("code",[s._v("exists")]),s._v(")， 还有谓词("),a("code",[s._v("predicates")]),s._v(")等重要逻辑概念。同时ql也提供了递归的支持和聚合(如"),a("code",[s._v("count")]),s._v(" "),a("code",[s._v("sum")]),s._v(" "),a("code",[s._v("average")]),s._v(")。")]),s._v(" "),a("p",[s._v("详细的示例使用可以跟着"),a("a",{attrs:{href:"https://codeql.github.com/docs/writing-codeql-queries/ql-tutorials/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方示例"),a("OutboundLink")],1),s._v("来学习.")]),s._v(" "),a("h3",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),a("p",[s._v("大多数时候我们的查询是这样子的：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("language")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 导入对应的语言包 */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 可能存在的 一些谓词 类的设置 */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 声明变量等 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 设置逻辑表达式 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 打印结果 */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[s._v("#")]),s._v(" 类型")]),s._v(" "),a("p",[s._v("codeql中存在5种类型: "),a("code",[s._v("int")]),s._v(" "),a("code",[s._v("date")]),s._v(" "),a("code",[s._v("float")]),s._v(" "),a("code",[s._v("boolean")]),s._v(" "),a("code",[s._v("string")]),s._v("， 每个类型有对应的谓词(也可以先理解为函数)可以被调用， 如下例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"where逻辑表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where逻辑表达式"}},[s._v("#")]),s._v(" where逻辑表达式")]),s._v(" "),a("p",[s._v("可以使用"),a("code",[s._v("and")]),s._v(" "),a("code",[s._v("or")]),s._v(" 等连接各个表达式，使用exists定义局部变量，")]),s._v(" "),a("p",[s._v("有一种比较有趣的使用方式，这表示"),a("code",[s._v("t.getHairColor()")]),s._v("肯定和一个字符串匹配，")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getHairColor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("下面这是另一个示例， 表示肯定存在一个person的年龄比t大，但我们也不想知道这个大的是哪个，只是表示t不是最大年龄这个意思。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合"}},[s._v("#")]),s._v(" 聚合")]),s._v(" "),a("p",[s._v("聚合函数，"),a("code",[s._v("max")]),s._v(" "),a("code",[s._v("count")]),s._v(" "),a("code",[s._v("min")]),s._v(" "),a("code",[s._v("sum")]),s._v(" "),a("code",[s._v("avg")])]),s._v(" "),a("p",[s._v("下面的示例就是配合"),a("code",[s._v("exists")]),s._v("选取最大的年龄，")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" Person t \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("但是我们也可以使用"),a("code",[s._v("order by")]),s._v(" 关键字")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"谓词-predicate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谓词-predicate"}},[s._v("#")]),s._v(" 谓词 "),a("strong",[s._v("Predicate")])]),s._v(" "),a("p",[s._v("谓词有点类似函数的意思，但是并不完全等同于函数，他也是一种描述，来指示某种状态，")]),s._v(" "),a("p",[s._v("无返回值的谓词其实有点像宏的意思，他会直接替换过来,")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("predicate isSouthern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("{\n\tp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"south"')]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" Person p \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" isSouthern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" p \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("有返回值的谓词通过"),a("code",[s._v("result")]),s._v("来表示返回的值，而且这里的"),a("code",[s._v("result")]),s._v("也可以理解为一个类型是该谓词返回类型的变量，也可以被函数调用等，如下示：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("Person relativeOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("{\n\tparentOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parentOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n}\nPerson childOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("{\n  p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parentOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"判断语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断语句"}},[s._v("#")]),s._v(" 判断语句")]),s._v(" "),a("p",[s._v("在ql语言中是不存在if for等语法的，循环一般通过递归实现，判断一般通过逻辑表达式实现：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("string other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n  this "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Left"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Right"')]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" \n  this "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Right"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Left"')]),s._v(" \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"定义类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义类"}},[s._v("#")]),s._v(" 定义类")]),s._v(" "),a("p",[s._v("可以自己定义类型，定义类，这里的类其实是类似集合的概念，表示符合某种属性的集合")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("class "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SmallInt")]),s._v(" extends "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" {"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SmallInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {this "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" }\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" square"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" this "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" this}\n}\n\nclass Southerner extends Person {\n\tSoutherner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n\t\tthis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"south"')]),s._v("\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("类中的谓词也可以重写，这里语法有点类似oop中的类中的方法的重写")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("class Child extends Person {\n\tChild "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n\t\tthis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" \n\t}\n  \toverride predicate isAllowedIn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string region"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("{\n      region "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[s._v("#")]),s._v(" 递归")]),s._v(" "),a("p",[s._v("这其实是谓词的一种特性，可以轻易的使用递归，")]),s._v(" "),a("p",[s._v("这里介绍一个最简单的递归类型, 在定义中调用了自己本身")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("Person ancestorOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Person p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("{\n  result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parentOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" \n  result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parentOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ancestorOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"传递闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传递闭包"}},[s._v("#")]),s._v(" 传递闭包")]),s._v(" "),a("p",[s._v("同一个操作被多次使用(这里的"),a("code",[s._v("ancestorOf()")]),s._v("操作)在ql中比较常见，这种操作称为传递闭包，")]),s._v(" "),a("p",[s._v("其中两个符号非常有用，"),a("code",[s._v("+")]),s._v(" "),a("code",[s._v("*")])]),s._v(" "),a("p",[s._v("在递归的例子中展示的"),a("code",[s._v("parentOf()")]),s._v("来演示：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("parentOf+(p)")]),s._v(" 将会调用p一次到多次，等同于上面的"),a("code",[s._v("ancestorOf(p)")]),s._v("，")]),s._v(" "),a("li",[a("code",[s._v("parentOf*(p)")]),s._v(" 将会调用p 0次到多次，他会返回p和p的祖先，")])]),s._v(" "),a("h3",{attrs:{id:"codeql查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#codeql查询"}},[s._v("#")]),s._v(" codeql查询")]),s._v(" "),a("p",[s._v("首先是在最开始导入对应的语言库，"),a("code",[s._v("import <language>")])])])}),[],!1,null,null,null);t.default=n.exports}}]);